clear all; close all;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% flickerprocedure ter verkrijging van isoluminantie van 2 kleuren%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% cp, 7/3/07% timing?%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% parameters%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ntrials = 4;ncolors = 1;matchcanon 		= [1 0 0]; % welk van de drie kleuren (RGB) moet gematched worden?vhDim 			= [400]; % vh dim van vierkant waar kleuren verschijnengoalRGB 		= [0 0 255]; % aan welke rgb-waarde moet gematched worden?goalRGB2 		= [0 0 128];test_max 		= [255 255 255]; % max rgb-waardetest_min 		= [1 1 1]; % min rgb-waardeflickFreq		= 20; % HzscreenPar.SN	= 0; % welk scherm (dicho-opstelling: 1)plotkleuren		= ['rgb'];% maindir = cd;% cd results;% resdir = cd;% cd(maindir);naam = input('subject initials: ','s');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% start de procedure%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%history = equilumFunc(goalRGB,matchcanon,test_max,test_min,vhDim,ntrials,screenPar,flickFreq);if ncolors==2    history2 = equilumFunc(goalRGB2,matchcanon,test_max,test_min,vhDim,ntrials,screenPar,flickFreq);end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% reken gemiddelde gematchte rgb-waarde uit%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for i = 1:ntrials	matchval(i) = history(i).data(end,find(matchcanon));	nframes(i) = length(history(i).data);endendmean = mean(matchval)endstd = std(matchval);matchRGB = [endmean endmean endmean].*matchcanon;if ncolors==2    for i = 1:ntrials        matchval2(i) = history2(i).data(end,find(matchcanon));        nframes2(i) = length(history2(i).data);    end    endmean2 = mean(matchval2)    endstd2 = std(matchval2);    matchRGB2 = [endmean2 endmean2 endmean2].*matchcanon;end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% plot de data%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%for i = 1:ntrials	plot(history(i).data(:,find(matchcanon)),plotkleuren(find(matchcanon)));	hold onendplot(1:max(nframes),repmat(goalRGB(goalRGB~=0),1,max(nframes)),plotkleuren(find(goalRGB~=0)));errorbar(max(nframes),endmean,endstd,'ko');hold offxlabel('frame nr');ylabel('match val');if ncolors==2    figure;    for i = 1:ntrials        plot(history2(i).data(:,find(matchcanon)),plotkleuren(find(matchcanon)));        hold on    end    plot(1:max(nframes2),repmat(goalRGB2(goalRGB2~=0),1,max(nframes2)),plotkleuren(find(goalRGB2~=0)));    errorbar(max(nframes2),endmean2,endstd2,'ko');    hold off    xlabel('frame nr');    ylabel('match val');end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% save de data%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if ncolors==2%     save([resdir '/' naam],'goalRGB','matchRGB', 'goalRGB2', 'matchRGB2');% else    %     save([resdir '/' naam],'goalRGB','matchRGB');% end