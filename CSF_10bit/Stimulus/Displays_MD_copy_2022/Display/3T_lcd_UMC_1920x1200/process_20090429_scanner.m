function process_scanner;% calibrationx = [255 223 191 159 128 96 64 32 0]'./255;yi = [18.5   17.6    151     128     8.75    8.42;...     19.7   18      154     146     9.11    8.5;...     17.4   16.6    137     131     8.87    8.56;...     12.9   12.8    102     100     8.33    8.36;...     9.06   8.9     64.4    62.4    6.2     6.3;...     5.92   6       37      36.7    4.17    4.3;...     3.52   3.61    17.2    17.1    2.69    2.72;...     1.84   1.95    4.58    4.75    1.76    1.84;...     1.55   1.63    1.4     1.63    1.37    1.62]; Y = zeros(numel(x),3);y(:,1) = mean(yi(:,1:2)');y(:,2) = mean(yi(:,3:4)');y(:,3) = mean(yi(:,5:6)');    y = y-mean(yi(end,:));y = y ./ (ones(size(y,1),1)*max(y));y = flipud(y);x = flipud(x);% precision = bitsbits = 8;ngamma = 2.^bits;% fitxint = linspace(0,1,ngamma)';for n=1:3,    p{n} = fminsearch(@(a) cumgaussfit(a,x,y(:,n)),[0.5 0.2]');    yint(:,n) = cumulativegaussian(xint,p{n}(1),p{n}(2));    yint(:,n)=yint(:,n)-min(yint(:,n));    yint(:,n)=yint(:,n)./max(yint(:,n));end% invertcmapMax = ngamma-1;gamma = zeros(cmapMax+1,3);precise = (0:0.01:cmapMax)'/cmapMax; for jj = 1:3	tmp = cumulativegaussian(precise,p{jj}(1),p{jj}(2));    tmp = tmp-min(tmp); tmp = tmp./max(tmp);	for ii=0:cmapMax;		[junk placetmp] = min(abs(ii/cmapMax-tmp));		gamma(ii+1,jj) = precise(placetmp);	endendgamma(gamma>1)=1;gamma(gamma<0)=0;% plot gammafigure(1);clf;X = [0:255]'./255;plot(x,y,'o');hold on;plot(x,mean(y,2),'kx','MarkerSize',20);hold on;plot(xint,yint);axis([0 1 0 1]);axis square;% plot inverted gammafigure(2);clf;plot(y,x,'o');hold on;plot(mean(y,2),x,'kx','MarkerSize',20);hold on;plot(xint,gamma);axis([0 1 0 1]);axis square;yint(yint>1)=1;yint(yint<0)=0;gammaTable = round(gamma.*cmapMax);gamma = gammaTable./(ngamma-1);save('gamma.mat','gamma','gammaTable');returnfunction [e]=cumgaussfit(p,x,y)f=cumulativegaussian(x,p(1),p(2));f=f-min(f);f=f./max(f);e=norm(y-f);returnfunction y = cumulativegaussian(x,mu,sigma)y = 0.5 * erfc( (mu - x) ./ (sigma * sqrt(2)));y(y<0) = 0;y(y>1) = 1;return